name: continuous-integration

on:
  pull_request:
  push: # Run CI on the master branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - master

env:
  # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
  # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
  PREREQS: |
    rustup set auto-self-update disable


jobs:
  clippy:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - run: |
          ${{ env.PREREQS }}
          rustup toolchain install stable --profile minimal
          rustup component add clippy
      - uses: Swatinem/rust-cache@v2
        with:
          # shared-key: ${{ matrix.os }}
          prefix-key: v0 #increment this to bust the cache if needed

      - name: run cargo clippy
        run:  cargo clippy --features dev
        
  #checks rust fmt - helps ensure all commits are in sync
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run:  ${{ env.PREREQS }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    strategy:
      fail-fast: false

    name: test
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - run: |
          ${{ env.PREREQS }}
          rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
        with:
          # shared-key: ${{ matrix.os }}
          prefix-key: v0 #increment this to bust the cache if needed

      - name: run cargo test
        run:  cargo test --features dev
